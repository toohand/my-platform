<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
  Title: 数据字典管理 数据库操作
 * Description: portal新增、删除、修改
 * Company: hugeinfo
 * author: codeBuilder
 * time:2015-07-06 11:39:01
 * version 1.0
-->
<mapper namespace="com.lefthand.system.dao.mapper.SysDictionaryDao">
    <!-- 结果集 -->
    <resultMap id="dataResult" type="com.lefthand.system.domain.SysDictionary">
            <result property="id" column="id"/>
            <result property="dtyName" column="dty_name"/>
            <result property="typeId" column="type_id"/>
            <result property="typeName" column="type_name"/>
            <result property="sortCode" column="sort_code"/>
            <result property="state" column="state"/>
            <result property="remark" column="remark"/>
            <result property="cdt" column="cdt"/>
            <result property="cdp" column="cdp"/>
    </resultMap>

    <sql id='TABLE_NAME'>HG_SYS_Dictionary</sql>

    <sql id="column-part">
        id,
        dty_name,
        type_id,
        type_name,
        sort_code,
        state,
        remark,
        cdt,
        cdp
    </sql>

    <sql id="value-part">
           #{e.id:BIGINT},
           #{e.dtyName:VARCHAR},
           #{e.typeId:VARCHAR},
           #{e.typeName:VARCHAR},
           #{e.sortCode:INTEGER},
           #{e.state:INTEGER},
           #{e.remark:VARCHAR},
           #{e.cdt:TIME},
           #{e.cdp:VARCHAR}
    </sql>
    <sql id="set-part">
          <if test="e.id != null">id = #{e.id:BIGINT}, </if>
          <if test="e.dtyName != null">dty_name = #{e.dtyName:VARCHAR}, </if>
          <if test="e.typeId != null">type_id = #{e.typeId:VARCHAR}, </if>
          <if test="e.typeName != null">type_name = #{e.typeName:VARCHAR}, </if>
          <if test="e.sortCode != null">sort_code = #{e.sortCode:INTEGER}, </if>
          <if test="e.state != null">state = #{e.state:INTEGER}, </if>
          <if test="e.remark != null">remark = #{e.remark:VARCHAR}, </if>
          <if test="e.cdt != null">cdt = #{e.cdt:TIME}, </if>
          <if test="e.cdp != null">cdp = #{e.cdp:VARCHAR}, </if>
    </sql>
    <sql id="where-part">
         <if test="w.id != null and w.id !=''">and id = #{w.id} </if>
         <if test="w.dtyName != null and w.dtyName !=''">and (dty_name like CONCAT(CONCAT('%', #{w.dtyName}), '%')) </if>
         <if test="w.typeId != null and w.typeId !=''">and type_id = #{w.typeId} </if>
         <if test="w.typeName != null and w.typeName !=''">and type_name = #{w.typeName} </if>
         <if test="w.sortCode != null and w.sortCode !=''">and sort_code = #{w.sortCode} </if>
         <if test="w.state != null and w.state !=''">and state = #{w.state} </if>
         <if test="w.remark != null and w.remark !=''">and remark = #{w.remark} </if>
         <if test="w.cdt != null and w.cdt !=''">and cdt = #{w.cdt} </if>
         <if test="w.cdp != null and w.cdp !=''">and cdp = #{w.cdp} </if>
    </sql>
    <!-- 新增 -->
    <insert id="insert">
        <selectKey keyProperty="e.id" resultType="java.lang.Long" order="BEFORE">
            SELECT MYBATIS_SEQUE.NEXTVAL as id FROM DUAL
        </selectKey>
        insert into
        <include refid="TABLE_NAME"/>
        (
        <include refid="column-part"/>
        )
        values
        (
        <include refid="value-part"/>
        )
    </insert>
    <!-- 批量新增 -->
    <insert id="insertBatch" parameterType="List" keyProperty="id">
        insert into
        <include refid="TABLE_NAME"/>
        (
        <include refid="column-part"/>
        )
        select MYBATIS_SEQUE.NEXTVAL,a.* from(
        <foreach collection="list" item="e" index="index" separator="union all">
            select
            <include refid="value-part"/>
            from dual
        </foreach>
        ) a
    </insert>

    <!-- 更新对象 -->
    <update id="update">
        update
        <include refid="TABLE_NAME"/>
        <set>
            <include refid="set-part"/>
        </set>
        <where>
            id = #{e.id}
        </where>
    </update>
    <!-- 条件更新 -->
    <update id="updateMap">
        update
        <include refid="TABLE_NAME"/>
        <set>
            <include refid="set-part"/>
        </set>
        <where>
            <include refid="where-part"/>
        </where>
    </update>

    <!-- 根据主键删除 -->
    <delete id="deleteByKey">
        delete from
        <include refid="TABLE_NAME"/>
        where  id = #{key}
    </delete>

    <!-- 根据条件删除  -->
    <delete id="delete" >
        delete from
        <include refid="TABLE_NAME"/>
        <where>
            <include refid="where-part"/>
        </where>
    </delete>

    <!-- 批量删除 -->
    <delete id="deleteBatch">
        delete from
        <include refid="TABLE_NAME"/>
        where id in
        <foreach item="item" index="object" collection="w" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="fetch" resultMap="dataResult">
        select * from
        <include refid="TABLE_NAME"/>
        <where>
            id = #{key}
        </where>
    </select>

    <!-- 根据条件查询总 -->
    <select id="count" resultType="long">
        select count(*) from
        <include refid="TABLE_NAME"/>
        <where>
            <include refid="where-part"/>
        </where>
    </select>
    <!-- 根据条件查询 -->
    <select id="list" resultMap="dataResult">
        select * from
        <include refid="TABLE_NAME"/>
        <where>
            <include refid="where-part"/>
        </where>
        <if test="sort != null">
          <foreach collection="sort" item="s" index="index" separator="," open="order by ">
              ${s.property} ${s.direction}
          </foreach>
        </if>
        <if test="sort == null">
            order by  id desc
        </if>
    </select>

    <select id="page"  resultMap="dataResult">
        select * from (
          select temp.*,rownum row_num from(
            select * FROM
            <include refid="TABLE_NAME"/>tabl
            <where>
                <include refid="where-part"/>
            </where>
            <if test="page.sort != null">
               <foreach collection="page.sort" item="s" index="index" separator="," open="order by ">
                   ${s.property} ${s.direction}
               </foreach>
            </if>
            <if test="page.sort == null">
                order by  id desc
             </if>
          ) temp
        ) temp1
        <where>
            <![CDATA[ temp1.row_num > #{page.offset} and temp1.row_num <=  #{page.offset} + #{page.size} ]]>
        </where>
    </select>
</mapper> 